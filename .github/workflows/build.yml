name: Build

on: [ push, pull_request ]

jobs:
  gradle-wrapper-validation:

    name: "Validate Gradle Wrapper"
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Validate Gradle Wrapper
      uses: gradle/wrapper-validation-action@v1

  check:

    name: "Build project"
    runs-on: ${{ matrix.platform }}
    needs: gradle-wrapper-validation

    strategy:
      matrix:
        platform: [ ubuntu-latest, windows-latest ]

    steps:
    # Setup environment
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    # Setup Gradle cache
    - name: Setup cache for Gradle and dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: "gradle-\
          ${{runner.os}}-\
          ${{hashFiles('gradle/wrapper/gradle-wrapper.properties')}}-\
          ${{hashFiles('**/*.gradle.kts')}}"
    # Get Plugin Verifier metadata
    - name: Get metadata about Plugin Verifier
      id: metadata
      shell: bash
      run: |
        ./gradlew --stacktrace metadataFiles
        echo "::set-output name=ideVersions::$(cat build/metadata/pluginVerifierIdeVersions.txt | base64)"
        echo "::set-output name=pluginVerifierHomeDir::~/.pluginVerifier"
    # Cache Plugin Verifier IDEs
    - name: Setup Plugin Verifier IDEs Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.metadata.outputs.pluginVerifierHomeDir }}/ides
        key: plugin-verifier-${{ runner.os }}-${{ steps.metadata.outputs.ideVersions }}
    # Build and test
    - name: Build project
      run: ./gradlew --stacktrace assemble
    - name: Run linters and tests
      run: ./gradlew --stacktrace check
    - name: Run :verifyPlugin
      run: ./gradlew --stacktrace verifyPlugin
    - name: Run :runPluginVerifier
      run: ./gradlew --stacktrace runPluginVerifier -Pplugin.verifier.home.dir=${{ steps.metadata.outputs.pluginVerifierHomeDir }}
    # Upload artifacts
    - name: Upload build reports
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: build-reports-${{ matrix.platform }}
        path: build/reports/
        if-no-files-found: ignore
    - name: Upload build result
      uses: actions/upload-artifact@v2
      with:
        name: build-result-${{ matrix.platform }}
        path: build/distributions/
        if-no-files-found: error
