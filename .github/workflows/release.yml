name: Prepare Release

on:
  push:
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs: {}

jobs:
  build:

    name: Create draft for GitHub release
    runs-on: ubuntu-latest

    steps:
    # Setup environment
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    # Setup cache
    - name: Setup cache for Gradle and dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: "gradle-\
          ${{runner.os}}-\
          ${{hashFiles('gradle/wrapper/gradle-wrapper.properties')}}-\
          ${{hashFiles('**/*.gradle.kts')}}"
    # Build
    - name: Build plugin
      id: gradle-build
      run: ./gradlew --stacktrace verifyPlugin build writeMetadataFiles
    # Upload artifacts
    - name: Upload build reports
      if: steps.gradle-build.outcome == 'success' || steps.gradle-build.outcome == 'failure'
      uses: actions/upload-artifact@v2
      with:
        name: build-reports
        path: build/reports/
        if-no-files-found: ignore
    - name: Upload build result
      uses: actions/upload-artifact@v2
      with:
        name: build-result
        path: build/distributions/
        if-no-files-found: error
    # Get metadata
    - name: Get metadata
      id: get-metadata
      run: |
        echo "::set-output name=version::$(cat build/version.txt)"
        echo "::set-output name=zipfile::$(cat build/zipfile.txt)"
        echo "::set-output name=zipname::$(basename "$(cat build/zipfile.txt)")"
    - name: Check consistency between tag name and version
      if: success() && github.event_name == 'push'
      env:
        tag: ${{ github.ref }}
        version: ${{ steps.get-metadata.outputs.version }}
      run: |
        if [ "$tag" != "v$version" -a "$tag" != "refs/tags/v$version" ]; then
          echo "Tag '$tag' does not match version '$version'." >&2
          exit 1
        fi
    # Create GitHub release
    - name: Create GitHub release draft
      uses: actions/create-release@v1
      id: create-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get-metadata.outputs.version }}
        release_name: v${{ steps.get-metadata.outputs.version }}
        body_path: ./build/latest_changelog.md
        draft: true
    - name: Upload asset for GitHub release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: ${{ steps.get-metadata.outputs.zipfile }}
        asset_name: ${{ steps.get-metadata.outputs.zipname }}
        asset_content_type: application/zip
